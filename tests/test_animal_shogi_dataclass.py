from pgx.animal_shogi import *
import numpy as np


INIT_BOARD = AnimalShogiState(
    turn=0,
    board=np.array([
        [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0],
        [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    ]),
    hand=np.array([0, 0, 0, 0, 0, 0])
)
#  doctest用の盤面
TEST_BOARD = np.array([
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],  # 11 後手ゾウ
    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 12 先手ヒヨコ
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 13 空白
    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],  # 14 先手のニワトリ
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],  # 21 後手ライオン
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 22 空白
    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],  # 23 先手キリン
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],  # 24 後手キリン
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 31 空白
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 32 空白
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 33 空白
    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],  # 34 先手ライオン
    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 持ち駒 先手ヒヨコ
    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],  # 持ち駒 先手キリン
    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 持ち駒 先手ゾウ
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 持ち駒 後手ヒヨコ
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 持ち駒 後手キリン
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 持ち駒 後手ゾウ
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 手番の情報)
])


def test_new_turn_change():
    turn = new_turn_change(INIT_BOARD)
    assert turn == 1


def test_new_move():
    s = new_move(INIT_BOARD, 6, 5, 1, 6, 0)
    assert s.board[0][6] == 1
    assert s.board[1][6] == 0
    assert s.board[1][5] == 1
    assert s.board[6][5] == 0
    assert s.hand[0] == 1
    assert s.turn == 1


if __name__ == '__main__':
    test_new_turn_change()
    test_new_move()