import math
from typing import Tuple

import jax
import jax.numpy as jnp
from flax import struct

NUM_TILES = 44
N_PLAYER = 3
MAX_RIVER_LENGTH = math.ceil((NUM_TILES - N_PLAYER * 5) // N_PLAYER)
WIN_CACHE = jnp.int8(
    [
        [3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0],
        [3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0],
        [3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0],
        [3, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
        [3, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
        [3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0],
        [3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0],
        [3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0],
        [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
        [3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0],
        [0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0],
        [0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0],
        [0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0],
        [0, 3, 0, 0, 0, 0, 0, 3, 0, 0, 0],
        [0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0],
        [0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0],
        [0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3],
        [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0],
        [0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0],
        [0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0],
        [0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0],
        [0, 0, 3, 0, 0, 0, 0, 0, 3, 0, 0],
        [0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0],
        [0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3],
        [3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0],
        [0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0],
        [0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0],
        [0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0],
        [0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0],
        [0, 0, 0, 3, 0, 0, 0, 0, 0, 3, 0],
        [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3],
        [3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0],
        [0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0],
        [0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0],
        [0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 0],
        [0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0],
        [0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0],
        [0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 3],
        [3, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
        [0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0],
        [0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0],
        [0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0],
        [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0],
        [0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0],
        [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3],
        [3, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
        [0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0],
        [0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0],
        [0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0],
        [0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0],
        [0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0],
        [0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3],
        [3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0],
        [0, 3, 0, 0, 0, 0, 0, 3, 0, 0, 0],
        [0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0],
        [0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0],
        [0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 0],
        [0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0],
        [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3],
        [3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0],
        [0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0],
        [0, 0, 3, 0, 0, 0, 0, 0, 3, 0, 0],
        [0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0],
        [0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0],
        [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0],
        [0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3],
        [3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0],
        [0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0],
        [0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0],
        [0, 0, 0, 3, 0, 0, 0, 0, 0, 3, 0],
        [0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0],
        [0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0],
        [0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0],
        [0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3],
        [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
        [0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3],
        [0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3],
        [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3],
        [0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 3],
        [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3],
        [0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3],
        [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3],
        [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3],
        [4, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
        [3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],
        [3, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
        [3, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0],
        [3, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],
        [3, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
        [3, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0],
        [1, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 4, 1, 1, 0, 0, 0, 0, 0, 0, 0],
        [0, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0],
        [0, 3, 0, 1, 1, 1, 0, 0, 0, 0, 0],
        [0, 3, 0, 0, 1, 1, 1, 0, 0, 0, 0],
        [0, 3, 0, 0, 0, 1, 1, 1, 0, 0, 0],
        [0, 3, 0, 0, 0, 0, 1, 1, 1, 0, 0],
        [1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 1, 4, 1, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 4, 1, 1, 0, 0, 0, 0, 0, 0],
        [0, 0, 3, 1, 1, 1, 0, 0, 0, 0, 0],
        [0, 0, 3, 0, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 3, 0, 0, 1, 1, 1, 0, 0, 0],
        [0, 0, 3, 0, 0, 0, 1, 1, 1, 0, 0],
        [1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0],
        [0, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 1, 4, 1, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 4, 1, 1, 0, 0, 0, 0, 0],
        [0, 0, 0, 3, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 3, 0, 1, 1, 1, 0, 0, 0],
        [0, 0, 0, 3, 0, 0, 1, 1, 1, 0, 0],
        [1, 1, 1, 0, 3, 0, 0, 0, 0, 0, 0],
        [0, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0],
        [0, 0, 1, 1, 4, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 4, 1, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 4, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 3, 1, 1, 1, 0, 0, 0],
        [0, 0, 0, 0, 3, 0, 1, 1, 1, 0, 0],
        [1, 1, 1, 0, 0, 3, 0, 0, 0, 0, 0],
        [0, 1, 1, 1, 0, 3, 0, 0, 0, 0, 0],
        [0, 0, 1, 1, 1, 3, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 1, 4, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 1, 4, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 4, 1, 1, 0, 0, 0],
        [0, 0, 0, 0, 0, 3, 1, 1, 1, 0, 0],
        [1, 1, 1, 0, 0, 0, 3, 0, 0, 0, 0],
        [0, 1, 1, 1, 0, 0, 3, 0, 0, 0, 0],
        [0, 0, 1, 1, 1, 0, 3, 0, 0, 0, 0],
        [0, 0, 0, 1, 1, 1, 3, 0, 0, 0, 0],
        [0, 0, 0, 0, 1, 1, 4, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 4, 1, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 4, 1, 1, 0, 0],
        [1, 1, 1, 0, 0, 0, 0, 3, 0, 0, 0],
        [0, 1, 1, 1, 0, 0, 0, 3, 0, 0, 0],
        [0, 0, 1, 1, 1, 0, 0, 3, 0, 0, 0],
        [0, 0, 0, 1, 1, 1, 0, 3, 0, 0, 0],
        [0, 0, 0, 0, 1, 1, 1, 3, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 1, 4, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 1, 4, 1, 0, 0],
        [1, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0],
        [0, 1, 1, 1, 0, 0, 0, 0, 3, 0, 0],
        [0, 0, 1, 1, 1, 0, 0, 0, 3, 0, 0],
        [0, 0, 0, 1, 1, 1, 0, 0, 3, 0, 0],
        [0, 0, 0, 0, 1, 1, 1, 0, 3, 0, 0],
        [0, 0, 0, 0, 0, 1, 1, 1, 3, 0, 0],
        [0, 0, 0, 0, 0, 0, 1, 1, 4, 0, 0],
        [1, 1, 1, 0, 0, 0, 0, 0, 0, 3, 0],
        [0, 1, 1, 1, 0, 0, 0, 0, 0, 3, 0],
        [0, 0, 1, 1, 1, 0, 0, 0, 0, 3, 0],
        [0, 0, 0, 1, 1, 1, 0, 0, 0, 3, 0],
        [0, 0, 0, 0, 1, 1, 1, 0, 0, 3, 0],
        [0, 0, 0, 0, 0, 1, 1, 1, 0, 3, 0],
        [0, 0, 0, 0, 0, 0, 1, 1, 1, 3, 0],
        [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3],
        [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 3],
        [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 3],
        [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 3],
        [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 3],
        [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 3],
        [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 3],
        [4, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 0, 3, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 0, 0, 3, 0, 0, 0, 0, 0],
        [1, 1, 1, 0, 0, 0, 3, 0, 0, 0, 0],
        [1, 1, 1, 0, 0, 0, 0, 3, 0, 0, 0],
        [1, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0],
        [1, 1, 1, 0, 0, 0, 0, 0, 0, 3, 0],
        [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3],
        [3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],
        [0, 4, 1, 1, 0, 0, 0, 0, 0, 0, 0],
        [0, 1, 4, 1, 0, 0, 0, 0, 0, 0, 0],
        [0, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0],
        [0, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0],
        [0, 1, 1, 1, 0, 3, 0, 0, 0, 0, 0],
        [0, 1, 1, 1, 0, 0, 3, 0, 0, 0, 0],
        [0, 1, 1, 1, 0, 0, 0, 3, 0, 0, 0],
        [0, 1, 1, 1, 0, 0, 0, 0, 3, 0, 0],
        [0, 1, 1, 1, 0, 0, 0, 0, 0, 3, 0],
        [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 3],
        [3, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
        [0, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0],
        [0, 0, 4, 1, 1, 0, 0, 0, 0, 0, 0],
        [0, 0, 1, 4, 1, 0, 0, 0, 0, 0, 0],
        [0, 0, 1, 1, 4, 0, 0, 0, 0, 0, 0],
        [0, 0, 1, 1, 1, 3, 0, 0, 0, 0, 0],
        [0, 0, 1, 1, 1, 0, 3, 0, 0, 0, 0],
        [0, 0, 1, 1, 1, 0, 0, 3, 0, 0, 0],
        [0, 0, 1, 1, 1, 0, 0, 0, 3, 0, 0],
        [0, 0, 1, 1, 1, 0, 0, 0, 0, 3, 0],
        [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 3],
        [3, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0],
        [0, 3, 0, 1, 1, 1, 0, 0, 0, 0, 0],
        [0, 0, 3, 1, 1, 1, 0, 0, 0, 0, 0],
        [0, 0, 0, 4, 1, 1, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 4, 1, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 1, 4, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 1, 1, 3, 0, 0, 0, 0],
        [0, 0, 0, 1, 1, 1, 0, 3, 0, 0, 0],
        [0, 0, 0, 1, 1, 1, 0, 0, 3, 0, 0],
        [0, 0, 0, 1, 1, 1, 0, 0, 0, 3, 0],
        [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 3],
        [3, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],
        [0, 3, 0, 0, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 3, 0, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 3, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 4, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 1, 4, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 1, 1, 4, 0, 0, 0, 0],
        [0, 0, 0, 0, 1, 1, 1, 3, 0, 0, 0],
        [0, 0, 0, 0, 1, 1, 1, 0, 3, 0, 0],
        [0, 0, 0, 0, 1, 1, 1, 0, 0, 3, 0],
        [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 3],
        [3, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
        [0, 3, 0, 0, 0, 1, 1, 1, 0, 0, 0],
        [0, 0, 3, 0, 0, 1, 1, 1, 0, 0, 0],
        [0, 0, 0, 3, 0, 1, 1, 1, 0, 0, 0],
        [0, 0, 0, 0, 3, 1, 1, 1, 0, 0, 0],
        [0, 0, 0, 0, 0, 4, 1, 1, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 4, 1, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 1, 4, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 1, 1, 3, 0, 0],
        [0, 0, 0, 0, 0, 1, 1, 1, 0, 3, 0],
        [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 3],
        [3, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0],
        [0, 3, 0, 0, 0, 0, 1, 1, 1, 0, 0],
        [0, 0, 3, 0, 0, 0, 1, 1, 1, 0, 0],
        [0, 0, 0, 3, 0, 0, 1, 1, 1, 0, 0],
        [0, 0, 0, 0, 3, 0, 1, 1, 1, 0, 0],
        [0, 0, 0, 0, 0, 3, 1, 1, 1, 0, 0],
        [0, 0, 0, 0, 0, 0, 4, 1, 1, 0, 0],
        [0, 0, 0, 0, 0, 0, 1, 4, 1, 0, 0],
        [0, 0, 0, 0, 0, 0, 1, 1, 4, 0, 0],
        [0, 0, 0, 0, 0, 0, 1, 1, 1, 3, 0],
        [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 3],
        [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],
        [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0],
        [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0],
        [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],
        [1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0],
        [0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0],
        [0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0],
        [0, 1, 1, 2, 1, 1, 0, 0, 0, 0, 0],
        [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
        [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0],
        [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0],
        [1, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0],
        [0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0],
        [0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0],
        [0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0],
        [0, 0, 1, 1, 2, 1, 1, 0, 0, 0, 0],
        [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0],
        [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0],
        [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],
        [0, 1, 1, 2, 1, 1, 0, 0, 0, 0, 0],
        [0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0],
        [0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 2, 2, 1, 0, 0, 0, 0],
        [0, 0, 0, 1, 1, 2, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0],
        [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0],
        [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 1, 1, 2, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 1, 2, 2, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0],
        [0, 0, 0, 0, 1, 2, 2, 1, 0, 0, 0],
        [0, 0, 0, 0, 1, 1, 2, 1, 1, 0, 0],
        [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0],
        [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0],
        [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 2, 1, 1, 0, 0, 0],
        [0, 0, 0, 0, 1, 2, 2, 1, 0, 0, 0],
        [0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 2, 2, 1, 0, 0],
        [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],
        [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0],
        [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0],
        [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0],
        [0, 0, 0, 0, 1, 1, 2, 1, 1, 0, 0],
        [0, 0, 0, 0, 0, 1, 2, 2, 1, 0, 0],
        [0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0],
    ]
)


@struct.dataclass
class State:
    curr_player: jnp.ndarray = jnp.int8(0)
    legal_action_mask: jnp.ndarray = jnp.zeros(9, jnp.bool_)
    terminated: jnp.ndarray = jnp.bool_(False)
    turn: jnp.ndarray = jnp.int8(0)  # 0 = dealer
    discards: jnp.ndarray = -jnp.ones(
        (N_PLAYER, MAX_RIVER_LENGTH), dtype=jnp.int8
    )
    last_discard: jnp.ndarray = jnp.int8(-1)
    hands: jnp.ndarray = jnp.zeros((N_PLAYER, 11), dtype=jnp.int8)
    walls: jnp.ndarray = jnp.zeros(NUM_TILES, dtype=jnp.int8)
    draw_ix: jnp.ndarray = jnp.int8(N_PLAYER * 5)
    shuffled_players: jnp.ndarray = jnp.zeros(N_PLAYER)
    dora: jnp.ndarray = jnp.int8(0)


# TODO: avoid Tenhou
def _init_state(rng: jax.random.KeyArray):
    # shuffle players and walls
    key1, key2 = jax.random.split(rng)
    shuffled_players = jnp.arange(N_PLAYER)
    jax.random.shuffle(key1, shuffled_players)
    walls = jnp.arange(NUM_TILES, dtype=jnp.int8)
    jax.random.shuffle(key2, walls)
    curr_player = shuffled_players[0]  # dealer
    dora = walls[-1]
    # set hands (hands[0] = dealer's hand)
    hands = jnp.zeros((N_PLAYER, 11), dtype=jnp.int8)
    for p in range(N_PLAYER):
        for i in range(5):
            tile = walls[p * 5 + i]
            hands[p, tile] += 1
    # first draw
    draw_ix = jnp.int8(N_PLAYER * 5)
    hands[0, walls[N_PLAYER * 5]] += 1
    draw_ix += 1
    legal_action_mask = hands[0].sum(axis=0) > 0
    state = State(
        curr_player=curr_player,
        legal_action_mask=legal_action_mask,
        hands=hands,
        draw_ix=draw_ix,
        shuffled_players=shuffled_players,
        dora=dora,
    )  # type: ignore
    return curr_player, state


def _is_completed(hand: jnp.ndarray):
    x = jnp.abs(hand - WIN_CACHE).sum(axis=-1).min()
    return x == 0


def step(state: State, action: jnp.ndarray):
    # check ron
    win_players = jnp.zeros(N_PLAYER, dtype=jnp.bool_)
    if state.last_discard >= 0:
        for i in range(N_PLAYER):
            if state.turn == i:
                continue
            else:
                hand = state.hand[i]
                hand[state.last_discard] += 1
                if _is_completed(hand):
                    win_players[i] = True
    if jnp.any(win_players):
        pass
    else:
        win_players
